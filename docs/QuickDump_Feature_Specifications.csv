Feature,Description,UI Component,Code Consideration
Lock Screen Widget,"A WidgetKit-based iOS widget that appears on the lock screen. When tapped, it deep links into the app and triggers the 'new note' flow immediately. This widget allows fast access without unlocking the phone manually, leveraging Face ID auto-unlock.",Small lock screen widget with a 'New Note' button/icon.,"Use WidgetKit and URL schemes (e.g., yourapp://new-note). Handle deep linking with onOpenURL in SwiftUI App entry point."
Auto Voice Recording,"As soon as the app opens (especially via widget), voice recording starts without requiring a tap. This captures fleeting thoughts instantly.","Microphone animation, recording indicator, and waveform if needed.",Use AVAudioEngine + Apple Speech framework or OpenAI Whisper API. Ensure microphone permissions are requested upfront.
Optional Text Input,"For users who prefer typing, tapping 'Type Instead' will open a focused text field.",Auto-focused TextField with a toggle to switch from voice to text.,SwiftUI @FocusState to auto-focus on TextField. Design UI toggle to swap modes.
Auto Save on Exit,Notes (voice or text) are saved automatically once the user exits the input screen or pauses.,No 'Save' button; UI fades back to main or success tick.,Use AppLifecycle detection or view dismissal to trigger a save event. Use local storage (CoreData/SQLite).
Timestamp & Location Tag,Each note is automatically tagged with the time and current location.,Small footer on each note card showing time & location info.,Use Date() for time and CoreLocation for GPS data. Handle permissions gracefully.
Daily Reminder to Review Notes,"Push notification (e.g., 10 PM) prompting user to revisit dumped notes.",Notification popup leading to the dayâ€™s note list.,Use UNUserNotificationCenter for local scheduling. Trigger reminder if notes exist that day.
Note List View,"Chronologically ordered list of notes (text or transcribed), with quick tag preview and actions.","List view with note snippet, tag, and star/delete buttons.","Use List in SwiftUI, integrate CoreData or local DB. Support swipe actions for star/delete."
AI Tagging and Classification,"Notes are analyzed and tagged automatically (e.g., book, movie, idea).","Chip-style tags (e.g., ðŸŽ¬ Movie) below each note.",Call OpenAI API or fine-tuned model with short prompts. Store tag metadata in DB.
Apple Watch Companion App,"Allows one-tap note capture via voice on the Watch, syncing back to iPhone.",Watch screen with a single record button and confirmation view.,Use WatchKit + WCSession for communication. Use built-in voice dictation.
Smart AI Rewrite/Expansion,"User taps 'Rewrite' to generate a longer, more descriptive version of the original short note.",Action sheet with AI-generated result and edit/accept option.,Use GPT API to process short note and return rewritten text. Provide a retry/edit interface.
